use std::ops;
use std::error::Error;

#[derive(Debug)]
struct O(i128);

impl ops::Add<O> for O {
    type Output = O;
    
    fn add(self, rhs: O) -> Self::Output {
        O(self.0 * rhs.0)
    }
}

impl ops::Mul<O> for O {
    type Output = O;
    
    fn mul(self, rhs: O) -> Self::Output {
        O(self.0 + rhs.0)
    }
}

fn main() -> Result<(), Box<dyn Error>> {
    let mut res = Vec::new();
    res.push(O(8) * (O(9) * O(7) + O(4) + O(9)) * O(4) + O(8) + (O(6) + O(6) + O(9) + O(8) + O(3) + O(7)) * O(2));
    res.push(O(7) + O(5) + (O(8) * (O(2) + O(6) * O(5) * O(2) + O(6)) + O(3) + O(3)) * O(2) + O(8) * (O(2) * O(5) + O(8) + O(7) * O(6) * O(8)));
    res.push(O(4) + (O(4) + (O(4) * O(8) * O(9) + O(7)) * O(5) * O(9) + O(6) + (O(4) * O(4) * O(8) * O(7) + O(9) * O(3))) + O(3) * (O(6) * O(5) + O(9) + O(5) + (O(4) + O(4) * O(5) * O(3))) * (O(6) + O(9) + O(5) + O(3) + O(7) * O(2)) + (O(9) + O(4) + (O(2) + O(8))));
    res.push((O(3) + O(2) * O(7)) * O(3) * O(6) * O(5) + O(2) * O(2));
    res.push(O(9) * (O(3) + O(5) + O(2) + O(3)) * O(5) * ((O(7) * O(6)) * O(4) + (O(5) + O(8) * O(9) * O(9) + O(4) * O(5)) * O(8)) * O(9));
    res.push(O(5) * O(5) + O(9) + O(4) * ((O(5) + O(8) * O(7)) + O(2)));
    res.push(O(9) * O(5) * O(7) + ((O(6) * O(3) + O(8) + O(3) * O(3)) + O(2) * O(5) * O(8) + (O(3) + O(2) + O(9) + O(3))) + O(4) * O(8));
    res.push(O(8) + (O(5) + (O(7) + O(7)) * O(2) + O(6) + O(9)));
    res.push((O(3) * O(8) * O(9) + O(5) + O(8)) + (O(8) + (O(7) + O(4) + O(7) * O(2) * O(3) + O(6)) * O(2)) * O(8) + (O(8) * O(9) * O(5) + O(4) * (O(2) * O(7) + O(3))));
    res.push(((O(7) * O(9)) + O(4) + O(4) * (O(2) + O(5) * O(8) + O(8)) + O(7) + O(5)) + O(2) + O(9) + O(4) + (O(3) + O(5) + O(7) + O(7) * O(2) * O(6)) * O(2));
    res.push(((O(9) + O(9) + O(4) * O(8) * O(7) * O(9)) * O(8)) * O(2) + O(3) * O(7) * O(2));
    res.push((O(2) + O(6) + O(2)) + O(5) * (O(2) + O(7) + O(6)) + (O(4) + O(8) + O(7) * O(9) * O(6)) + O(4) + O(7));
    res.push((O(4) + (O(5) * O(9) * O(8)) * O(7)) + O(6));
    res.push(O(2) + O(3) * (O(4) * O(3) * O(3) + O(7) + O(2) * (O(3) + O(2))));
    res.push((O(9) + O(4)) * O(3) + O(8) + O(4) * O(2));
    res.push(O(9) + O(7) * O(2));
    res.push(((O(6) + O(4) * O(7) + O(8)) + O(6) + (O(2) + O(9) * O(5)) * O(3) * (O(5) + O(6) * O(5) * O(9))) * O(7));
    res.push(O(3) + O(5) * O(3) * (O(3) + O(9) * O(5)) * O(7) * O(7));
    res.push(O(2) + (O(4) * O(2) + O(2) * (O(9) * O(3)) + (O(6) + O(7)) * O(3)) + O(8) + (O(3) + O(2) * O(2) + (O(5) * O(3) + O(3)) + O(3)) * O(4));
    res.push(((O(6) + O(2) + O(4) * O(3) * O(6) * O(7)) + O(9) + (O(8) * O(8) + O(8)) + (O(3) + O(2)) * (O(7) + O(3))) + (O(8) + O(2) + O(7) * (O(8) * O(2) * O(6) * O(3) * O(9) * O(8))) * O(9) + O(6));
    res.push(O(5) * (O(5) * O(6) * O(7) + O(6) * O(6) + O(9)));
    res.push(O(9) * ((O(5) + O(3) * O(9) + O(9)) * O(4) * O(7)) + (O(5) + O(4) * O(5)) + O(6) + (O(7) + (O(7) + O(3)) + O(2)) * O(5));
    res.push(O(8) * O(6) + O(6) * O(8) * O(5) * O(2));
    res.push((O(5) + O(4) * O(6)) + (O(7) * O(7) + O(5) + O(5) * O(8) + O(2)));
    res.push((O(6) + O(3) * O(4) + O(6) + O(2) + O(6)) * O(3) + O(5) * O(2) + ((O(3) + O(2) * O(6)) * (O(4) * O(9) * O(7)) * (O(9) * O(6) + O(6) * O(7)) + (O(4) + O(3) * O(7) * O(2) * O(8) * O(8)) + O(7)) + O(7));
    res.push((O(9) + O(8) * O(9) * (O(6) + O(4) + O(8)) + O(7) * O(6)) + O(6) * O(6) + O(7));
    res.push((O(5) * O(7) + O(5) * O(3)) + ((O(7) + O(4) + O(7) * O(8) + O(2) * O(7)) + (O(6) + O(8) * O(7) + O(8)) * O(9) + O(2)) * O(8));
    res.push((O(2) * O(8) * O(3) * O(2)) + (O(9) * (O(3) + O(9)) * (O(4) + O(9) * O(3) + O(8) + O(8) * O(8)) * O(7)) * O(8) + O(2));
    res.push(O(8) * (O(9) + O(3) * O(8) + O(3) + O(3)) + (O(7) * O(4) * O(5) + O(6) * O(2) * O(9)) * O(7) * (O(9) * O(8) * O(4) * O(8) * O(7)) * O(4));
    res.push((O(3) + (O(2) + O(4) + O(7) + O(4)) + O(7) + O(2) + (O(4) * O(8) + O(2) * O(7) * O(5) + O(4)) + O(4)) + O(2));
    res.push(O(2) * (O(6) * O(8) + O(7)) * (O(3) * O(6) * O(3) + O(3) * O(8) * O(4)) * O(9));
    res.push((O(4) + (O(8) + O(3) * O(3) * O(7) * O(9)) + (O(8) * O(5) + O(2) * O(6) * O(2)) + O(8)) * O(8) + O(6) + O(4) * ((O(3) + O(5) + O(7) + O(3) * O(2) + O(2)) * (O(6) + O(8) * O(5) + O(9) * O(7)) + O(8)));
    res.push((O(3) + O(8) + O(3) * O(4)) * (O(9) * O(2) * O(7) + O(2) + O(2)) + O(8));
    res.push((O(9) * O(3) * (O(3) * O(7) * O(3) * O(8) * O(3) * O(6)) * (O(7) * O(2) * O(4) * O(4) + O(5) + O(2)) * O(6) * O(6)) + O(2));
    res.push((O(5) + O(7)) * ((O(3) * O(5)) + O(4) + (O(3) * O(8) + O(9))) + ((O(6) + O(5) + O(9) + O(3) + O(4) + O(6)) + O(4) + O(7) + (O(5) + O(3) * O(8)) * O(7)) * O(7));
    res.push((O(3) * O(5) + (O(6) + O(7) * O(8))) + (O(9) * O(6)) * O(5) + ((O(7) * O(4) * O(7)) * O(4) + O(3)));
    res.push(O(9) * O(4) * (O(5) + O(4) * O(3) + O(8) + O(8)) + O(9));
    res.push(O(2) * O(3) + (O(8) * O(7) + O(3) * (O(4) * O(6) + O(4) + O(2)) * O(5) * O(4)) * (O(3) * O(2)));
    res.push(O(7) + O(7) + O(5) + (O(7) * O(3) + O(3) + O(4) + O(4) * O(2)) + O(8));
    res.push(O(6) + O(6) * ((O(8) + O(6) + O(2) + O(9) * O(7) * O(8)) * O(8) + O(8) + O(3) * O(6)) + (O(2) * O(8) * O(8) * O(8) + O(2)));
    res.push(O(8) + O(9) * (O(7) + O(7) * O(8) * O(3) + O(8)) + O(7) + O(5) + O(4));
    res.push(O(3) * O(6) * O(6) * O(7) * O(9) + O(9));
    res.push((O(6) + (O(6) + O(6)) * O(2) * O(7) + O(7)) * O(6) + O(7) + O(4) + O(3) + (O(8) * (O(6) + O(6) * O(4))));
    res.push(((O(6) + O(6)) * O(6) * O(8) + O(8) + O(2)) * (O(9) * O(3) * (O(2) + O(5) + O(4) + O(8) + O(8) + O(8)) * (O(6) + O(8)) + O(7) + O(7)));
    res.push((O(8) * (O(7) + O(8) * O(4) + O(3) * O(4) * O(3)) + O(5) * (O(5) + O(5) + O(5) * O(7) + O(6) * O(7)) + (O(8) * O(6) + O(9) * O(7) * O(9))) + ((O(7) * O(7) * O(8) * O(3)) * O(7) + O(2) + O(5)) + O(9) * O(7));
    res.push(O(5) * ((O(4) + O(4) * O(9) + O(4) * O(3)) * (O(7) + O(7)) + O(8) + O(7)) + O(2) + O(6) * (O(7) + O(5) * O(6) + O(9) * (O(3) + O(5) * O(9))));
    res.push(O(6) + O(5));
    res.push(O(8) * (O(9) * O(6) + O(4) + O(4) + (O(2) + O(2) + O(8) + O(7)) * O(3)) + O(2) * O(9) + O(9));
    res.push((O(9) * O(5) + O(5) + O(7)) + O(9) + O(2) * ((O(8) + O(2) + O(4)) + O(8)));
    res.push(O(2) * (O(9) * O(8) + O(4) + (O(5) * O(5) * O(4)) * O(9) * O(5)) + O(3));
    res.push(O(8) + O(9) + O(6) * (O(2) * O(3) * O(7) * O(4) * O(8)) * O(9));
    res.push(O(6) + O(8) * O(5) * (O(3) + O(8) + O(4) * O(5) * O(5)) * O(4) * O(7));
    res.push(O(7) * O(8) + O(3) * O(4) + O(3) * (O(5) + (O(2) + O(2) + O(3) + O(5) + O(7) * O(5))));
    res.push(O(6) * O(9) * O(7) + O(2) * O(6) + O(4));
    res.push(O(7) * (O(9) + (O(2) * O(5) + O(6)) * O(3) * O(3) + O(9) + O(9)) * O(6) * (O(4) + O(7) + O(2) * O(9) * (O(4) * O(4))));
    res.push((O(4) * (O(3) + O(9) + O(3) + O(2) * O(3))) + O(2) + O(8));
    res.push(O(3) * (O(8) * O(8)));
    res.push(O(3) + O(6) + O(8) + O(9) * (O(7) * O(2) + O(4) + O(6) * O(3)) + (O(7) + O(2)));
    res.push((O(7) * O(5) * O(6) + O(9)) + O(4) + O(8));
    res.push(O(2) * O(4) + O(2) * O(7) + O(4) + (O(9) * O(9) + O(7) + O(4) * (O(9) * O(9)) + O(4)));
    res.push(O(5) * O(5) * (O(5) + O(4) + O(7) + O(8)));
    res.push(O(6) + O(7) + (O(8) + O(4)) * O(9) * O(3) * O(6));
    res.push((O(7) + O(6) * O(8) + (O(7) + O(5) + O(6) * O(2) + O(2)) * O(2)) + (O(9) + O(2) + O(6) + O(9) * O(9) + O(9)) + O(3));
    res.push(((O(2) * O(9) * O(5) * O(4) + O(5) * O(4)) + O(8) * O(2) + O(3) + (O(6) + O(8) * O(3) + O(8) * O(5) + O(9)) * (O(2) * O(8))) * O(3));
    res.push((O(4) + O(4) + O(9)) + O(5) * (O(5) + (O(5) + O(8) + O(2) + O(5)) + O(8)) + O(8));
    res.push((O(4) * O(9) + O(3) * O(4)) * O(8) * O(6) * O(5));
    res.push(O(3) + O(3) * (O(7) + O(5) * O(8) * O(9) + O(7)));
    res.push(O(9) * O(9) + (O(8) * O(7) * O(8) + O(7) + O(2) * O(7)) * O(4) * O(6));
    res.push(O(4) * O(4) * ((O(2) * O(2) * O(9) * O(6) + O(7)) * O(6) * O(9)) * O(8) + O(2));
    res.push((O(4) + O(3)) * O(7) * (O(3) * O(8)) + O(3));
    res.push(O(9) + (O(4) + (O(4) + O(7))) * O(6));
    res.push(O(3) * O(4) + O(2) + (O(2) * (O(4) * O(8)) + O(5) + O(2)) + O(9));
    res.push(O(6) * O(9) + ((O(4) + O(4) + O(5) + O(6) + O(2) * O(6)) + O(5) + O(7) + (O(9) * O(3) * O(9) + O(4)) * O(5) + O(2)) + (O(3) * O(3) + O(4) + (O(5) * O(5)) * (O(7) * O(2) + O(5) + O(9)) * O(6)) * O(9));
    res.push((O(9) * O(7) + O(8) * O(3) + (O(3) + O(3) + O(2) * O(4))) + O(2));
    res.push(O(7) * O(4) + (O(8) + O(5)) * O(3) * O(9));
    res.push(O(6) + (O(3) + O(6) * O(2)) + O(8));
    res.push(O(2) + O(8) * O(9) * (O(5) * O(4) + O(2)) + O(7));
    res.push(O(8) * O(9) + O(3) * (O(4) + O(7) + O(8) + (O(6) * O(4) + O(5) + O(7) * O(5)) + (O(4) * O(4))) * O(6) + (O(7) + O(5) * O(4)));
    res.push(O(4) * O(3) * (O(9) + (O(6) + O(7) * O(8) * O(4)) * (O(6) * O(9)) * O(3) * (O(3) + O(7) * O(9))) + O(3) * O(7));
    res.push(O(2) + (O(5) * O(3) + O(4) + O(4)) + O(6) * O(2) + O(5));
    res.push(O(6) + O(4) + (O(5) * (O(5) + O(3) + O(9) + O(9) * O(3)) + O(9) + O(6) * (O(3) * O(8) * O(9))) * O(6) * O(6) + O(7));
    res.push((O(6) * O(3) + O(3) + (O(4) + O(4) + O(5) + O(7) * O(9) * O(6)) * O(2)) + (O(3) * (O(8) * O(2) + O(7) * O(5))) * O(4));
    res.push((O(9) * O(5) * O(5) + O(3) * O(7)) * O(4) + O(9) * O(8) * O(2));
    res.push(O(6) * O(5) + (O(6) + O(6) + O(8)));
    res.push(O(3) * O(2) + O(9));
    res.push(O(8) + O(6) + (O(5) * O(8) + (O(7) * O(3) * O(3) + O(3) + O(8)) + O(8)));
    res.push((O(3) * (O(3) * O(2) + O(6) * O(6) * O(3) * O(9)) * O(6) + O(5)) + O(4) + ((O(2) + O(5) * O(9)) + O(5) + O(9)) * O(9) + O(3));
    res.push(O(9) * O(3) + (O(8) * O(9) + O(2) + (O(3) * O(7)) * O(5) + O(9)) + O(3));
    res.push(O(6) + O(2) + O(3) + (O(2) * O(8) + (O(4) * O(6)) * O(9) + (O(9) + O(8) + O(9) + O(6) * O(9)) + (O(9) + O(8) + O(2) + O(7) + O(5) * O(8))) * O(4));
    res.push(O(7) + O(7) * (O(5) * O(3) * O(7) + (O(2) * O(4)) + O(7) * (O(8) + O(7))));
    res.push((O(3) * O(8)) * (O(2) * O(5) + O(2) * O(7)) + O(7));
    res.push((O(2) * O(3) + O(5) * O(5) + O(2)) + ((O(4) + O(2) + O(4) * O(2)) * (O(4) + O(7) * O(8)) + O(9)) * O(3));
    res.push((O(3) + O(2) + O(5) + O(5)) + (O(7) * O(2) + (O(7) * O(5) + O(2) + O(3) + O(4))) * (O(8) * O(7) * O(8) + (O(4) * O(7) + O(8) + O(5))) + O(6) * O(5) + O(8));
    res.push(O(4) * O(8) * O(5) + ((O(9) + O(5) + O(7) * O(4)) + (O(5) + O(3) * O(9) + O(2) + O(6) * O(7)) * O(7) + (O(4) * O(8) + O(2) + O(5) * O(6)) * (O(4) * O(9) * O(2) + O(8))) * O(6));
    res.push(O(2) + O(5) + O(5) + O(9) + O(2));
    res.push(O(3) + (O(2) + O(8) + O(4) * O(9)) * (O(6) * O(2) + O(9)) + O(2));
    res.push(O(7) * O(7) * O(8) + (O(2) * O(9) + (O(5) * O(2))) * O(7));
    res.push((O(7) * (O(7) * O(3) + O(9) * O(5) * O(8)) + O(5)) * ((O(4) + O(5) * O(2)) + O(9) * (O(9) * O(2) * O(8) + O(2)) + O(8) + O(9) + O(7)) + (O(8) * O(9) * O(5) * (O(5) + O(9) + O(7) * O(9))) * (O(4) * (O(8) * O(4)) + (O(7) + O(8) * O(6) * O(6)) * (O(8) * O(9) * O(4) * O(3) * O(4) * O(6)) * (O(7) * O(9) * O(6) + O(8) * O(2)) + O(9)));
    res.push((O(6) * O(7) * O(8) + O(9) + O(3)) * O(2) * O(2) + O(5));
    res.push(((O(9) + O(5) + O(9) * O(9)) * (O(9) * O(9) + O(9) + O(9) + O(7) + O(9))) + O(3));
    res.push(O(6) * ((O(4) + O(3) + O(3) + O(5)) + O(3)) + O(5) * O(8));
    res.push(O(9) * O(2) + O(4) + (O(4) * O(3) * O(7) * (O(4) + O(3) * O(5) * O(6)) + (O(7) + O(9) + O(8) + O(4) * O(5) + O(2)) * O(4)) + O(5));
    res.push(O(5) + ((O(4) * O(7) * O(3) * O(3) + O(5)) + O(8) * O(2) * O(7) + O(4) * O(6)) * O(9) + O(6));
    res.push(O(4) * O(6) * O(3) + O(6) + (O(4) * O(9) * O(3) * O(4) + O(7)));
    res.push(O(6) + (O(2) + O(3) + O(4) * (O(2) + O(9)) * O(6) + (O(8) + O(4) * O(3))) + O(7) + O(3) * O(7) * (O(6) * O(9) + O(3) + O(7) + O(9) + O(9)));
    res.push(O(3) * O(5) + O(7) * O(4) * O(6) * (O(3) + O(4) * (O(2) + O(2) + O(5) * O(6) * O(2) + O(2))));
    res.push(O(4) * (O(2) + O(5)) + O(2) * O(5) + (O(6) + O(8) * O(7) * O(5) * O(9) + O(9)));
    res.push(O(6) * O(2) + (O(4) + (O(4) + O(8) + O(9) + O(6) + O(3)) + O(9) * O(4) * O(2)) + O(4));
    res.push(O(5) + O(6) * ((O(4) + O(8)) + O(9) * O(4) + (O(4) + O(2) * O(3) + O(8) + O(9) * O(7)) + O(4) * (O(5) + O(2))) + O(4) * O(5));
    res.push(O(4) + ((O(4) + O(3)) * O(4) * O(4) + O(7)));
    res.push(((O(9) + O(7)) + (O(7) * O(4) * O(6)) * O(9) + O(3) * O(9)) * O(9) + O(6));
    res.push(O(8) + O(2) * O(9) * O(5) + (O(7) + O(5) * O(3) + O(3)));
    res.push(O(2) * O(8) + O(7) * ((O(3) + O(6)) * O(3) + O(5) * O(7) + O(7)) + (O(7) * O(8) * (O(7) * O(2)) * O(4) + O(6)) * O(3));
    res.push(O(8) * (O(8) * O(7) + O(5) + O(4)));
    res.push(O(4) * (O(8) * O(2) * O(4)) * O(4) * ((O(4) * O(3) * O(7) + O(5) * O(3)) + O(2) * O(5) + O(8) * O(5)) * O(6) + O(8));
    res.push((O(5) * O(6)) * O(2) * O(2) + O(8) + O(2) * O(6));
    res.push((O(8) + O(8) + O(2) * O(7) * O(6)) * (O(4) * O(2) + O(7) * O(9) * O(2) + (O(3) * O(4) + O(9) + O(7) + O(5))) * O(2) + O(6) + O(4));
    res.push(O(7) + O(3) + O(9) * (O(5) * O(6) + O(7) + (O(7) * O(9) + O(7) * O(6) + O(2) + O(9)) * O(3)) + O(4));
    res.push((O(6) * (O(8) + O(7) + O(9)) + O(8) * (O(3) + O(2)) + O(3)) + O(7) + O(4) * O(3) * O(5) + (O(7) * O(9) + O(8) * (O(3) * O(7) * O(2) * O(3)) * O(7)));
    res.push(O(5) + (O(9) * O(9)) * (O(3) + O(7) * O(6) * O(7) + O(6) * O(9)) * O(4) * O(8) * O(6));
    res.push((O(5) + O(5) + O(8) + O(8) + O(9) + (O(8) * O(4) + O(8) * O(8))) * O(6));
    res.push(O(6) + O(3) * O(9) * (O(3) + O(3) * (O(9) * O(2) * O(6)) + O(7) + O(3)) * O(2));
    res.push((O(5) * (O(6) + O(7) * O(5))) * (O(3) + O(3) * O(4) + (O(3) + O(9) + O(6) * O(4) * O(5) * O(9)) * O(4) + O(8)));
    res.push(O(5) * O(2) * O(4) + (O(8) * O(8) + O(9) * O(5) * O(8) * O(4)));
    res.push(O(2) + O(7) * (O(7) * O(3) * O(9) + O(9) + (O(8) * O(9) * O(4) * O(8)) * O(9)) + O(8) + O(9) + O(8));
    res.push(O(8) * (O(5) * O(3) * (O(6) + O(4) + O(2) * O(7) + O(3) + O(2))));
    res.push(O(5) + O(2) * O(7) * O(5));
    res.push(O(3) * (O(3) + O(6) * O(5) + O(9) + O(3) * O(8)) + O(7) * O(9) + O(3) + (O(4) + O(7) * O(3)));
    res.push(((O(9) + O(5) * O(3) + O(5)) * O(8) + O(7) + O(8)) + (O(8) * O(5) * O(7) * O(7)) + O(9) * O(9) * O(8) + O(6));
    res.push(O(3) + (O(9) * O(5) + O(4) + O(6) * O(3) * (O(6) * O(7))));
    res.push((O(6) * O(7) * (O(2) * O(2) + O(5) + O(9) + O(7)) * (O(8) * O(9))) + O(3) + O(5));
    res.push((O(2) + O(4)) + O(8) * O(2) + (O(6) * O(8) * O(5) * O(2) + O(8)) * O(4));
    res.push(O(5) + (O(9) + (O(8) + O(6) + O(7)) * O(8) * O(6) * O(7) + O(9)) * O(7) * O(4) + O(6) + (O(5) * O(4) * O(4)));
    res.push((O(2) + O(7) + O(6) + O(9) * O(2) * O(2)) + (O(4) * O(6) * O(4) * O(7) * O(3) * O(4)) * O(7) + O(7) * (O(2) * O(8)) + O(9));
    res.push(O(3) + ((O(8) + O(5)) + (O(2) + O(5) * O(6)) + (O(4) * O(9) + O(9)) * O(3)) + (O(3) + O(6) * O(4) * O(6) + O(2)) * O(7) + (O(6) + O(7) * O(9) + O(6)));
    res.push(O(5) * O(5) * (O(6) + O(8) * O(3) * O(5)) + O(8) * O(8));
    res.push(O(4) + O(6));
    res.push(O(2) * O(5) * (O(9) + O(2) * O(9) * O(7) + O(5) * O(2)) + O(5) + O(7) * O(3));
    res.push(O(4) + ((O(9) * O(7) * O(9) + O(2)) + O(6) * O(6) * O(2) + O(3) + O(4)) + O(7) + O(2));
    res.push(O(9) * ((O(6) * O(6)) * O(6) * O(6) + O(7) * O(3)));
    res.push(O(7) + O(5) + O(5) + O(4) * (O(9) + O(8) + (O(2) * O(2)) + O(4) * O(2)));
    res.push(O(6) * O(7));
    res.push(O(4) + O(7) * O(7) + O(2) * (O(2) * O(6) + O(7)));
    res.push(O(8) + O(7) + (O(5) + O(2) + O(5) + O(2) * (O(4) * O(7))) * (O(5) + (O(2) * O(6)) + O(7) + O(2) * O(3)));
    res.push(O(9) * O(2) + (O(3) + O(7) * O(8)) + O(2));
    res.push((O(3) * (O(2) + O(4))) + (O(6) + O(9) * O(2) + O(6) * O(4) * (O(5) * O(9) * O(8))) * O(7));
    res.push(O(4) * O(8) + O(2) * O(6) + O(7));
    res.push(O(7) * O(7) + O(8) + O(5) + ((O(2) * O(6) * O(3) * O(9) * O(8) + O(5)) + O(2) * O(5)));
    res.push(O(4) + O(9) * (O(4) * (O(8) + O(4) + O(2) * O(6) * O(4) + O(9)) + O(6) + O(8) * O(9) + O(2)) + (O(6) + O(3) * O(7)) * (O(6) * O(3) + O(4) * O(3) * O(5) * (O(3) * O(7) + O(3) * O(2))) * O(3));
    res.push((O(6) * O(5)) * O(4) * (O(9) * O(4) * O(4) * (O(7) + O(9) * O(8) + O(6) * O(9) * O(2))));
    res.push((O(8) * O(6)) * (O(4) + O(6) + O(4) * O(8)) + O(6) * (O(8) * O(4) + O(4)));
    res.push(O(5) + O(6) + O(4) + O(2) + O(9));
    res.push(O(6) + O(8) * (O(9) * O(5) + O(6) + O(7) + O(7) + O(7)) + ((O(4) * O(8) * O(2)) + O(8) * O(2)));
    res.push(O(6) + O(7) + O(9) + (O(6) + O(6) + O(5)) * ((O(3) * O(7) + O(3) * O(6) + O(7)) * O(6) * O(4) * O(3) * O(9)) * O(7));
    res.push(O(5) + O(9) * O(7) + O(7) * (O(4) + O(5) + (O(7) + O(9)) + O(8)) * O(4));
    res.push(O(7) + (O(8) + O(2) * O(4) * (O(4) * O(9) + O(2) * O(3) + O(3) + O(9))) + (O(5) + O(5) + O(6) * (O(8) + O(5) * O(8) * O(6) * O(8) * O(6)) * O(9)));
    res.push(O(3) * O(2) + O(8) + ((O(2) + O(6) * O(9)) * O(3) + O(6)));
    res.push(O(3) + (O(4) + O(6)) * O(4) + O(6) + O(3));
    res.push(O(6) * O(5) * O(3) * O(3) + (O(6) + O(4) * O(4) * (O(5) * O(6) + O(5) * O(6)) + O(6)) * (O(7) + O(9) * (O(5) + O(4) * O(5) + O(8)) + (O(9) + O(2)) + O(5) * (O(3) * O(7) + O(8) * O(7))));
    res.push(((O(9) * O(7) + O(6)) + O(4) * O(6) * O(3) + O(6) * O(5)) * (O(6) * O(6) * (O(6) * O(8)) * (O(8) + O(3) + O(8) * O(2) * O(5) + O(6))) + O(2));
    res.push(O(4) + (O(9) + O(7) * O(8)) + O(8) * O(8));
    res.push((O(5) * O(8) + O(3) * (O(5) + O(6) * O(4) * O(9) + O(8))) * O(8) * O(9) + (O(5) * O(8)));
    res.push(O(3) + (O(9) * O(3)) + O(6) + (O(5) + O(4) * O(7)) + O(9));
    res.push(O(2) + O(2) + O(6) + (O(6) + O(9)));
    res.push(((O(2) + O(7) + O(3) + O(8)) + O(7) * O(8)) + O(6) * O(4));
    res.push((O(4) * O(3) + (O(8) + O(7) + O(3) + O(2)) + O(5)) + O(3) + O(5) + O(3) + (O(6) + O(2) * (O(3) * O(8) + O(7) + O(6))));
    res.push((O(2) * O(3) * O(2)) + (O(4) + O(7) + O(2) + O(9)));
    res.push(O(2) * O(6) + O(6) * O(4) * O(8) * (O(2) + O(3)));
    res.push(O(9) + O(2) * O(8) * O(7) + ((O(6) * O(7)) * O(9) * O(3)));
    res.push((O(6) * O(7) * O(8) * O(9) * O(7) * O(9)) + O(2) + (O(6) + O(8)) * O(3) * O(7) + O(3));
    res.push(O(2) + O(8) + (O(9) + O(8) + O(8) + O(4) + O(2)) + O(7) + (O(2) * O(6) + O(3)) * O(7));
    res.push((O(2) * O(8) + O(7) * O(2)) * O(5) * O(9) * (O(5) * O(3) * O(2)));
    res.push((O(9) + (O(7) * O(8) + O(7) * O(4) + O(8) * O(3)) + O(8) + O(2) + O(8)) + O(2) + O(4));
    res.push(O(9) * O(7) + O(6) + (O(9) * O(6) + O(4) + O(6) * O(7)) + (O(7) * O(2) * (O(3) * O(5) * O(9) * O(6)) + O(4) * O(4) + O(5)) * O(5));
    res.push((O(6) * O(8) * (O(6) * O(3) * O(6) + O(4) + O(5) * O(9)) + O(3) * O(8) * O(8)) * O(6) + O(6) + O(2));
    res.push((O(5) * O(5) * O(4) + O(5)) * (O(3) + (O(8) * O(7) * O(6) * O(7)) * (O(9) * O(5) * O(2) + O(4) + O(9))) + O(8) * O(8) * O(4) + O(9));
    res.push(O(3) * (O(8) * O(3) * O(5) + O(5) * O(5) * O(6)) + O(2) * O(5));
    res.push((O(8) + O(5) + O(3) * O(8) + O(6) * O(8)) * O(9) * O(2));
    res.push(O(8) * (O(8) * O(4) * O(2) + O(2)) + O(4) * (O(5) + O(8)) * (O(7) * O(3) + O(2) + O(4) * O(2) + O(2)) + O(2));
    res.push((O(2) * O(9) + O(3)) * O(9) * O(5) + (O(6) * O(4)));
    res.push(O(2) + (O(4) * O(7) + O(8) * O(8) * O(6)) + O(9) * O(2) * O(3));
    res.push(O(8) + (O(9) * O(8)) + O(8) * ((O(4) * O(2)) + (O(2) * O(2) + O(3))) + O(7) + (O(4) + (O(5) * O(8) + O(2))));
    res.push(O(3) + O(8) + (O(8) * O(4) + O(9) + O(7)) + (O(6) * O(9) * O(5) * (O(4) + O(3) * O(3)) + O(7)));
    res.push((O(6) * (O(5) + O(3)) + O(3) * (O(5) * O(8))) * (O(7) * (O(3) * O(5) * O(9) * O(6) * O(2)) + O(5) + (O(8) * O(4) + O(6)) + (O(9) * O(4) * O(3)) + O(7)) * O(7) + O(7) * O(8));
    res.push((O(5) + O(4) * (O(8) * O(2) + O(6) + O(3)) + O(8) * O(9) * (O(5) * O(3) + O(8) * O(9) + O(6))) + O(3) * ((O(9) + O(9) + O(5) * O(6) + O(6) + O(2)) * O(6) + O(6) + (O(3) * O(5) * O(3))));
    res.push(O(6) + O(3) + O(5) + O(6) * O(4) + (O(8) + O(7) + O(5) * O(2) + O(2)));
    res.push((O(6) + O(7) * O(7) + O(4) * O(8)) * ((O(3) * O(3) * O(5) + O(9) + O(6)) + O(2) + (O(2) + O(3))) + O(7) * O(2) + (O(3) * O(9) + O(4)));
    res.push(O(6) + O(2) * (O(5) * O(2) + O(7) + O(6)) + O(2) * O(5) + O(6));
    res.push(O(5) * O(3) + O(5) * ((O(4) + O(4) + O(2)) + (O(7) + O(2) + O(8) * O(5)) * O(9) * O(7) + O(4) * O(3)) * O(5) + (O(6) + O(7) + O(7) + (O(5) + O(7))));
    res.push(O(7) * (O(2) + O(5) + (O(7) * O(9) * O(3) + O(6) + O(8)) * (O(6) * O(6))) + O(3) + O(8) * (O(6) + O(6) + O(5) * O(5) * O(4)));
    res.push(O(5) + O(3) * O(6) * O(2) + (O(7) * O(9) * O(5) + (O(4) * O(7) * O(8) + O(2)) + O(6)));
    res.push(O(5) * O(6) * ((O(4) * O(7) * O(3)) + O(8) + (O(2) + O(4))));
    res.push(O(7) + O(7) * O(5) + O(8) + ((O(5) + O(7) + O(3) + O(6) + O(7)) + O(8)) * (O(6) + O(9)));
    res.push(O(8) * O(3) * (O(4) * O(9) * O(5) + O(9) * O(9)) * (O(6) * (O(2) + O(3) + O(8))) + O(5) * O(2));
    res.push(O(9) + O(3) * ((O(6) + O(4) * O(2)) * (O(7) * O(8)) * O(9) + O(7) * O(3) * O(3)) + O(5) + O(2));
    res.push((O(9) * O(6) * O(8) * O(3) + O(9)) + O(6));
    res.push(((O(6) * O(6) + O(7) * O(2) + O(6) * O(6)) * (O(7) * O(5)) * O(9)) + O(7));
    res.push((O(9) + O(5) + O(5) + O(8) * O(8)) + O(4) * O(3) * (O(8) + O(8)) * (O(7) + O(8) + O(7) * O(8) * (O(7) * O(5) + O(4) * O(9) * O(8))));
    res.push((O(6) * O(4) + O(2) + O(7) * O(5)) * O(2) * O(3) * O(4) + O(4) + O(5));
    res.push(O(9) * ((O(4) * O(3) + O(4) * O(4)) + (O(8) + O(3) + O(8) + O(3) * O(7) + O(9)) * O(9)));
    res.push(O(8) + (O(8) + O(5) * O(9) * O(8) + O(3)) + (O(4) * O(5) + O(3) + (O(9) + O(5) * O(2) + O(4) * O(9)) * O(4)) * O(2) * O(9) + O(9));
    res.push(O(8) + O(8) + ((O(3) * O(3) + O(3) * O(3) + O(9)) * O(2) * O(4) * O(2) + O(6)) + O(4));
    res.push(O(8) + O(7) + O(2) + (O(2) + O(9) * O(3)) + (O(9) + (O(8) * O(9) * O(7) + O(2) + O(4) * O(5)) + (O(3) * O(9) + O(8))));
    res.push(O(8) * O(5) + (O(9) * O(7) + (O(5) + O(5) * O(9) * O(5) * O(9) * O(3))) + O(4) + O(6) * (O(8) + O(3) + O(4) + O(4) + O(7) * (O(7) + O(5) + O(7) + O(7) + O(8))));
    res.push(O(2) + O(3) * O(5) * O(7) * O(8) + O(5));
    res.push(O(9) + ((O(9) + O(7)) * O(3) + O(9) + O(8) + O(6)) * O(5));
    res.push(O(2) * O(5) * O(9) + O(3) * ((O(3) * O(3)) + O(8) * O(3) + (O(3) * O(3) * O(9) + O(6) * O(2))));
    res.push((O(6) * O(5) + O(4) + O(4) * O(5) * O(3)) + O(3) * O(8) + O(9) * O(6));
    res.push((O(8) + O(3) + O(7) * O(3)) + O(9) * O(9) + ((O(6) * O(2) * O(7)) + O(6) + O(7) * (O(5) * O(6))) + (O(8) * O(6)));
    res.push(O(3) * (O(2) * (O(3) + O(8) + O(2) + O(8) * O(6) + O(2)) * O(6) * O(3) * O(9)) * O(6) + O(3));
    res.push(O(5) + (O(6) * O(6)) + O(3) * O(3) * O(8) + (O(6) * O(8) * O(6)));
    res.push(O(4) * O(8) + (O(6) + (O(9) * O(4) * O(9) * O(6)) + (O(9) + O(2) * O(9)) + (O(9) + O(3))));
    res.push(O(5) + O(5) + O(8) + (O(8) * O(3) + (O(3) + O(4)) * O(6) * O(3) + O(4)));
    res.push(O(9) * O(8) * O(6) + O(9));
    res.push((O(9) * O(6) + O(5) * O(9) * (O(4) * O(4) * O(5) * O(3) * O(4))) * O(6) + O(8) + O(5) + (O(7) * O(4) + O(9) + O(6) + O(5)));
    res.push((O(3) + O(9) + O(2)) * O(3) + ((O(9) * O(9) + O(8)) + O(9) * (O(7) * O(8) + O(8) + O(3)) * O(2) + O(4)) + O(3) * O(6) + O(5));
    res.push(O(6) * O(8) * (O(8) * O(3) + O(4) + O(2) + O(8) + O(8)) * O(3));
    res.push(O(3) + ((O(5) * O(5) + O(8)) + O(4)) * (O(3) + O(3) * O(5) + O(3) + O(6)) + O(5));
    res.push(O(5) + O(7) * ((O(8) * O(4) + O(9)) * O(4)) * O(8) + O(7));
    res.push(((O(3) * O(8) * O(6) * O(7)) * (O(9) + O(9) + O(9) * O(2)) * O(8)) * O(6));
    res.push(((O(9) + O(4) + O(4) * O(6)) + O(2) + O(4) * O(8)) * O(8) + ((O(3) + O(3) + O(7)) + (O(4) + O(5) + O(9) * O(3)) + (O(6) + O(8) + O(9) * O(8) * O(4))) * O(8) * O(5));
    res.push((O(6) * O(8) + O(7)) + O(3) * O(3));
    res.push(O(2) * O(7));
    res.push(O(7) * O(4) * O(3) + O(9));
    res.push((O(9) + (O(6) + O(6) + O(2)) * O(5) * O(3)) * (O(7) + O(5) + O(3) * O(9) * O(7) * O(8)) * (O(8) + O(2) * (O(2) + O(4) + O(9) * O(8) + O(8) + O(6)) * O(6) + O(8) + O(5)));
    res.push((O(6) + O(9) + O(7) * O(5)) * O(7) + O(3) + O(2) + O(5));
    res.push(O(4) * (O(7) + O(8) * O(5) + O(6) * O(5)));
    res.push(((O(8) * O(9) * O(7) * O(3)) + O(9)) + O(8) * O(3) + O(4) + O(3) * O(9));
    res.push(O(5) + O(2) + (O(6) + (O(8) * O(3) + O(7) + O(9) + O(6)) * (O(7) * O(9) + O(9) + O(5) + O(4)) + (O(7) + O(2))) + O(6) + O(4) + O(2));
    res.push(O(6) * O(8) * O(9) * (O(4) * (O(8) * O(4) + O(6) + O(9) * O(3))) + O(8) + O(8));
    res.push((O(7) * O(5) * O(6) + O(7) + O(7)) * O(4) + (O(6) + O(5) * O(2)) + O(5) * O(7) * (O(7) + (O(8) * O(6)) * O(3) + O(7)));
    res.push(O(3) + (O(3) + O(9) + O(3) + O(3) * O(8) + O(7)) + O(5));
    res.push(O(6) + O(5) + (O(6) + O(2) + O(2)) * O(4) * O(3) * (O(3) * O(5) * (O(5) * O(8) * O(5)) * O(2) + O(4)));
    res.push(O(2) + (O(3) * O(2) * (O(5) * O(8) * O(7) * O(2)) * O(6)) * O(7) * O(3) * O(3) * O(2));
    res.push(((O(2) + O(7) * O(5) + O(2) + O(5) + O(4)) * O(4) * O(5) + (O(5) * O(8) + O(5))) * O(3));
    res.push(O(8) * (O(5) + O(8) * O(7)) + O(7) + O(5) + ((O(5) * O(4) * O(9)) * O(7) + O(8) * (O(6) + O(8) * O(4) + O(2) + O(2))) + O(4));
    res.push((O(3) * O(9) * O(5) * (O(6) + O(4) + O(5) + O(2) + O(2))) * O(5) + (O(9) + (O(7) * O(7)) * O(4) + O(5)) + (O(2) * O(6) * O(5) * (O(2) + O(4)) + O(7)) * (O(4) * O(6) * O(7) + (O(3) * O(5) * O(8))) * (O(2) + O(2)));
    res.push(O(2) * (O(3) + O(9) + O(6) * O(2) * O(3) * O(9)) * O(3) + (O(8) * O(5)));
    res.push((O(2) * (O(8) + O(3) * O(6)) * O(8) + O(2) + O(7) + O(2)) * O(9) + O(6) * O(5));
    res.push(O(3) + O(8) * O(5) + O(2) * O(8) * O(8));
    res.push(O(8) + O(6) + O(5) + O(4));
    res.push(((O(3) * O(8) * O(7)) + O(8)) * O(7) + (O(6) + (O(5) * O(4) + O(2) * O(2)) * (O(8) + O(2) + O(2)) + O(2) * O(8)) * O(2) + O(5));
    res.push((O(9) + O(2)) + O(2) + (O(4) + O(4)) + O(6) * (O(5) + O(4) + O(6)));
    res.push(O(7) + (O(6) * (O(3) + O(9) * O(3) * O(6) * O(6) + O(9)) + O(7) * (O(7) + O(7) + O(4)) + (O(3) + O(3) * O(4) + O(8)) * O(4)));
    res.push((O(7) * O(2) + O(3) * O(5) + O(2) + O(6)) * O(6) + (O(4) * O(8) + O(6)));
    res.push((O(7) * O(9) * O(3) + O(3)) + O(7) + O(3) * (O(4) + O(7) * (O(5) * O(6) * O(4) + O(9)) * O(7) * O(6)));
    res.push((O(6) * O(5) * (O(9) * O(8) * O(7) * O(5)) * O(2) + O(9)) * O(9) + O(9) * O(8));
    res.push(O(9) * O(9) * O(5));
    res.push(O(2) + ((O(3) + O(9) + O(2) * O(2)) * O(3) + (O(2) + O(5) + O(7) + O(4))) * (O(7) * (O(8) * O(4) * O(7)) * O(7) * O(2)));
    res.push(O(7) * O(8) + ((O(4) + O(6)) + O(7) * O(4)));
    res.push((O(9) + O(6) * (O(4) * O(6) + O(3)) + O(4)) + O(2) + O(6));
    res.push(O(8) + (O(8) + O(6) + O(6) * O(4) * O(5)) + O(4));
    res.push(O(3) + O(9) * (O(3) * (O(4) + O(6) + O(6)) + O(9) * (O(2) + O(8) * O(9)) * O(3)));
    res.push(O(8) * O(3) * O(5) * (O(2) * O(4) * O(3) + O(5) + O(5)));
    res.push(((O(4) + O(4) * O(4) + O(8) + O(7)) * O(4) * O(2) + O(7) + O(2) + O(7)) * (O(3) * O(6) + (O(4) + O(9) * O(2) + O(9)) * O(9)) * O(2) + O(6));
    res.push(O(6) + (O(4) * O(3)) + O(5) * O(6) * (O(9) + (O(2) + O(2) + O(8) + O(6) * O(2) * O(6))));
    res.push((O(7) * (O(8) * O(6) + O(3)) * O(3) * O(2)) * ((O(4) + O(3)) * O(9) * (O(4) + O(5) * O(6) * O(4) * O(7) + O(5)) + O(2) + O(5) * O(9)) + O(5));
    res.push(O(8) + O(6) * O(8) * (O(2) + (O(4) * O(3)) * O(8) * O(5)));
    res.push(O(6) * ((O(4) + O(7) + O(6)) + O(6) + O(7) + O(3) + O(9) + O(6)) * O(3));
    res.push(((O(8) + O(6) * O(2) + O(9)) + (O(9) + O(8) + O(4)) * O(8) * O(2) * O(8)) + O(4));
    res.push(O(6) + (O(9) + (O(4) + O(8) * O(2) * O(2) + O(7) + O(7)) + O(6) + O(7) * O(8) + O(4)) + O(2));
    res.push(((O(5) + O(8) + O(8) * O(3) * O(5) * O(4)) * O(8)) * O(3) + ((O(2) * O(9)) * O(2) + O(4) * O(7) * O(3) * O(7)) * O(7));
    res.push(O(8) + ((O(9) * O(5) * O(2) + O(8) * O(7)) * (O(9) + O(4) + O(6)) * (O(5) + O(9) + O(6) * O(5) + O(3)) * (O(2) + O(6) + O(7)) * O(9)));
    res.push(O(7) + ((O(6) * O(9) * O(3) + O(3) * O(4)) + O(7) + O(5)) * O(4));
    res.push(O(3) * (O(9) * O(6) * O(4) + O(6) * O(5) + O(7)) + (O(9) * O(6) * O(7)));
    res.push(O(6) + ((O(9) * O(6) + O(2) + O(2) + O(3) + O(4)) * O(5) + (O(4) * O(4) * O(9) + O(9) * O(3)) * O(7)) * O(7));
    res.push((O(3) * O(7) + O(4)) + (O(9) * O(7) + O(3) + O(5) + O(4) + O(4)) + O(6));
    res.push((O(7) * O(6) + (O(5) * O(6) * O(5))) + O(9) + O(8));
    res.push(((O(5) + O(8) * O(6) + O(6) + O(2)) + O(9) + (O(3) * O(2) * O(4) * O(3) + O(6)) + O(2)) + O(7) * O(8) + O(4) + ((O(3) + O(3)) * O(3)));
    res.push(O(4) + O(5) + O(2) * O(8) + (O(6) * O(5) * O(3) + (O(7) + O(2) + O(7)) * O(2)));
    res.push((O(4) * O(2) + O(3) + (O(5) * O(2) + O(6))) * O(3));
    res.push(O(7) * ((O(9) * O(7) + O(6) * O(5) + O(9) + O(5)) + O(2) + O(4)) + (O(6) + (O(2) + O(9) + O(3)) * O(7) * O(7) + (O(9) * O(8) + O(4) + O(5) * O(6))) * O(8));
    res.push(O(4) * O(7) + (O(4) + (O(2) * O(9) + O(4) * O(3) + O(7) * O(8)) * O(2) * O(6)) + O(9) + O(3));
    res.push(O(4) * O(3) * ((O(5) + O(3) + O(9) * O(8) + O(5) + O(5)) * O(3) * O(7) * O(9) * O(4)) * O(5));
    res.push(O(2) + O(4) * O(6) * O(5) * (O(6) * O(3) * (O(8) + O(4) + O(7)) + O(4)) * O(5));
    res.push(O(4) * (O(6) + O(4) * O(9)) * O(6) + O(3) * O(6));
    res.push(O(2) * O(5) * O(4) + O(9) + O(3) + ((O(7) * O(4)) + O(7) * O(2)));
    res.push(O(3) * O(8) * O(5) + ((O(8) * O(4) + O(7)) * O(6) + O(8) + O(4) + O(2) + O(7)) + O(2) * O(3));
    res.push((O(8) * O(4)) * O(4) * O(9) * O(8));
    res.push((O(7) + O(3) + O(3) + (O(9) * O(3) + O(4) + O(5)) + O(2) + (O(7) * O(4) + O(4) + O(5) * O(8))) + O(7) + O(4) * O(9) * O(2) + O(9));
    res.push(O(3) + O(9) + O(2) + O(9) + (O(6) * (O(7) * O(2) + O(3)) + (O(9) * O(7)) + O(5) * O(8)) + (O(6) * O(5)));
    res.push(O(9) + O(9) + O(7) + O(4));
    res.push((O(2) * O(3) * O(2) * O(6) * O(2)) * O(8) * O(3));
    res.push(O(7) + O(6) * O(6) + (O(8) * (O(9) * O(3) * O(8) + O(7) + O(2)) + (O(5) * O(2) * O(6) + O(6) + O(8)) * O(2) + O(9)));
    res.push((O(5) + O(2) + (O(9) + O(3) + O(3) + O(4) * O(8) + O(9)) * O(5) * O(3)) * (O(8) * O(6) + O(8)) + O(5) + O(5));
    res.push(O(4) * (O(8) * (O(2) + O(2) * O(2)) + O(4)) * O(9) + O(6) * (O(4) * O(5) * (O(2) * O(9))) * O(8));
    res.push(O(4) * O(7) * O(7) * (O(3) * (O(5) + O(8) + O(6) + O(9)) + O(4) + O(3)) * O(3));
    res.push(O(9) + (O(7) * O(5)) * ((O(9) * O(2) * O(7) + O(8)) * O(2) * O(5)) * (O(4) + O(3) + (O(8) + O(5))) * O(7) + O(3));
    res.push((O(2) * O(4) + O(9) * O(4)) + O(5));
    res.push((O(5) * O(4) + (O(8) + O(9) * O(4) + O(2)) + O(4) * (O(7) * O(3) * O(5) + O(5))) * O(5) * (O(4) * O(4) + O(5) + O(9)) + (O(6) + O(7) + O(7) * O(2)) * O(9));
    res.push(O(8) * O(8) * O(4) * O(5) * O(5) + (O(6) + O(9) + O(3) + O(2) + O(5) * O(3)));
    res.push((O(7) + O(2) + O(3) + O(2) * O(3) * (O(8) + O(9) + O(7) * O(5))) * O(6) + O(8));
    res.push((O(6) * O(5) * O(7) * O(8) * O(8) + O(2)) * O(9) + O(6) * O(9));
    res.push((O(6) + O(8)) * O(9) * (O(7) * O(3) * O(6) + O(6) * O(6)) * O(6));
    res.push(O(9) + O(7) * O(6) + O(2) * (O(7) * O(9)));
    res.push((O(9) * (O(8) * O(9) + O(2)) * O(4) * O(3)) * O(7) * O(6) * O(3) + (O(2) * O(2) * O(5) + (O(7) * O(9) + O(9))) * O(2));
    res.push(O(2) * O(7) * O(8) * O(4) + O(3));
    res.push(O(8) * ((O(7) * O(3)) + (O(4) * O(2) + O(9)) * (O(8) + O(2) * O(7) * O(9) + O(9) * O(9)) + O(8) * O(6)));
    res.push(O(2) * (O(7) + O(9) * O(6)) * O(8) + O(3) + ((O(2) * O(3) * O(4)) + (O(5) + O(6) + O(8))) * O(2));
    res.push(O(7) * O(8) + O(2) * (O(4) + O(4) + O(2) + O(6)) * O(5));
    res.push((O(4) + O(7) + O(6)) * O(6));
    res.push(O(7) * O(4) * O(3) + ((O(2) * O(2) + O(4) + O(4)) * O(8)) * O(6));
    res.push(((O(4) + O(4) * O(5) + O(7)) + O(8) * O(7) * (O(9) * O(4) * O(7) + O(9)) * O(7) + O(8)) * O(6) + O(6) * O(6) * O(5) + O(5));
    res.push(O(4) + ((O(2) + O(5) * O(7) + O(8)) * O(2)) * O(5));
    res.push(O(7) * O(3) + (O(8) * O(5) * O(9)) * O(4) * O(2) + O(3));
    res.push(O(3) + (O(9) * O(3) * (O(8) + O(6)) + O(9) * (O(3) + O(2))) * (O(9) + O(2) * O(4)) * O(2) * ((O(9) * O(3) * O(6)) * O(2)));
    res.push(O(3) * O(3) * O(3) * (O(8) + O(3) * (O(3) + O(7) + O(7) * O(7) + O(6)) * O(2) + O(6) + O(7)) + O(9));
    res.push(O(2) + O(6) + O(3) * (O(4) + O(7) * O(5) + (O(7) * O(7) + O(5) + O(2)) + O(6) * O(5)) * O(9) + O(9));
    res.push(O(2) + (O(6) * (O(9) + O(4))) * (O(2) * (O(3) * O(3))) + O(6) + O(2));
    res.push(O(4) + (O(4) + (O(7) * O(5) * O(9) + O(3) * O(3) + O(9))));
    res.push((O(2) * (O(5) + O(7) * O(4))) * O(9) + O(5) * (O(8) * O(9) + O(3) + O(6) + O(5) + O(2)) + O(6) + O(6));
    res.push((O(6) + O(2)) * (O(3) + (O(6) + O(8) + O(4) + O(6)) * O(4) + O(7) * O(4)) * O(9) * O(9) * O(5));
    res.push(O(2) * ((O(6) + O(6) * O(6) + O(8)) * O(2) * O(4) * O(9) + O(6)) * O(6));
    res.push(O(7) * (O(2) + O(6) * O(2) + O(2)) + O(6) + O(2) * O(5) * O(2));
    res.push((O(6) + O(8) * O(4) * O(9) * (O(4) + O(6))) * O(7) + O(2) + O(4) * O(2));
    res.push(O(3) * O(4) + (O(8) + O(2) * O(2) * O(2) * O(2) + O(6)) + O(8) * O(3) * (O(8) * O(6) * O(8) + O(7) * O(9)));
    res.push(O(8) * (O(2) + O(5) * (O(6) * O(6)) * O(8) + (O(3) * O(9))) * O(7) + (O(6) + O(2) * O(9)) * O(8));
    res.push(O(2) * O(8) + (O(2) * O(2) * O(2) * O(7) * (O(6) * O(6) * O(5)) + O(6)) + O(7));
    res.push((O(4) * O(4)) + O(9));
    res.push((O(8) + (O(6) * O(8) * O(3) * O(6) + O(4) * O(6)) + O(5) * O(2) * O(7) + O(9)) + O(4));
    res.push((O(9) + O(8) + O(7)) + O(5) + (O(3) + O(7) * O(3) * O(5)));
    res.push((O(9) + O(9) + O(9) + O(5) + O(3) + O(7)) * (O(8) + O(6)) + (O(9) + (O(3) + O(6)) * O(3) + O(9)) * O(3));
    res.push(O(6) + O(4) * O(8) + ((O(3) + O(8) * O(3) * O(9)) + O(5) * O(9) * (O(4) * O(2) + O(9) + O(7)) + O(2)));
    res.push(O(8) * O(6) * (O(3) + O(2) * O(3) * (O(6) + O(9) + O(2)) + O(6) * O(9)) * O(4) * O(8));
    res.push(O(3) * O(6) * O(6) + (O(9) * (O(6) + O(2) + O(8)) * O(4)) + O(3) + O(4));
    res.push((O(9) + O(7)) * O(2) + O(3));
    res.push(O(3) + O(2) * (O(7) * (O(7) + O(8) + O(6) + O(5) + O(4) * O(2)) * O(9) + O(5) + O(7)) + O(6) + O(7));
    res.push(O(4) + (O(8) * O(9) * O(4) + O(6) + O(4)) + O(4) * O(6));
    res.push((O(7) + O(2) + O(4) + O(4) * O(8)) * (O(8) + O(3) + O(9) * O(4) + O(5)) + O(2));
    res.push(O(6) * ((O(2) * O(5) * O(3) + O(7) + O(2)) + O(4) * O(3)) + O(8) * O(4) + O(8));
    res.push(O(5) + O(3) * O(9));
    res.push(O(8) * O(7));
    res.push(O(3) + (O(8) + O(3) + O(9)) + O(9) * O(4) + O(9) + (O(3) + O(5)));
    res.push(O(6) * O(6) + O(9) * O(5) * (O(2) + O(7) + O(5) + O(4)) + O(3));
    res.push(O(2) + O(3) + O(4) * O(7) * (O(7) * O(2) + O(3)) + O(7));
    res.push(O(2) * O(4) + O(7) + (O(2) + O(2) * O(6) + O(7) + O(3) * O(7)) + (O(8) * O(8)));
    res.push(O(4) * (O(6) + O(9) + (O(2) * O(2) * O(4)) + O(7) * O(7)) + O(8));
    res.push(O(4) + (O(3) + O(2) + O(9)));
    res.push(O(8) * O(8) + (O(2) * (O(2) * O(6) + O(5) + O(3) * O(8) + O(2)) + O(7) + O(8) * (O(8) * O(8) + O(3) * O(9) * O(8) * O(9))));
    res.push((O(9) + O(4) + (O(2) * O(4) + O(4) * O(9) * O(4) + O(3)) * O(2)) * ((O(4) + O(8)) + (O(5) * O(9) + O(8) * O(2)) * (O(7) + O(7) * O(2) * O(7))) * O(4) * O(6));
    res.push(O(8) * (O(8) + O(8)) + O(5));
    res.push(O(9) + (O(6) * O(4) * O(3) + O(6)) + O(3));
    res.push(O(4) * (O(4) + (O(3) + O(9) * O(9) * O(3) * O(7)) + O(6) + O(7) + O(7) * O(2)) + O(7) * O(8));
    res.push(O(8) * O(6) * (O(6) * (O(2) + O(9)) + (O(3) * O(9)) + O(7)));
    res.push(O(3) + O(6) + O(2) + O(4) + O(2));
    res.push(((O(6) * O(6) * O(5) + O(7) * O(9)) + O(9) + O(2) + (O(7) + O(5) * O(8) + O(9)) * O(8) + O(4)) + O(6) + O(3) * (O(2) + O(8)));
    res.push((O(8) * O(9) * O(7)) + (O(5) + O(3) * (O(9) * O(4) * O(4) + O(7) * O(6)) + (O(6) + O(7) + O(3) + O(4) + O(5)) * (O(7) + O(4) * O(4) + O(6) * O(4))) * O(8));
    res.push((O(6) + O(4)) * O(2) + O(9) * O(2) * ((O(4) * O(7) * O(3) * O(9) * O(5) + O(8)) + (O(2) * O(2)) * (O(4) + O(9) + O(5) * O(3)) + O(3)) * O(4));
    res.push(O(7) + O(4) + ((O(8) * O(8) * O(8) + O(9)) * O(8)));
    res.push((O(2) + O(9) + (O(9) + O(3) * O(5) + O(8) * O(4) * O(5))) * O(3) * O(9) + O(2) + O(8) + ((O(4) * O(6) + O(3) * O(2) + O(2) * O(3)) + O(6) * O(8) * O(5) * O(2) * O(9)));
    res.push(((O(7) * O(6) * O(4) * O(3)) * (O(8) * O(9)) + (O(8) + O(8) * O(8) + O(4) * O(4) + O(5)) * O(9)) + O(9));
    res.push(O(8) * (O(9) + O(9)) + O(2) + O(8));
    res.push(O(2) + O(9) * (O(7) + O(7) * O(7) * (O(2) * O(4) * O(2) + O(7)) + O(6)) * O(3) + O(5) + O(7));
    res.push(((O(7) + O(3) * O(2) * O(2)) * O(5) + O(9) * O(6) * O(2)) * ((O(6) + O(6) * O(7) * O(3)) * O(6) + O(5) * O(7) + O(8)) * (O(7) + O(3) * (O(2) * O(4) + O(3) + O(4) + O(2) + O(5))) * O(7) + O(3) * O(6));
    res.push(O(5) + O(7) * (O(3) + O(8) + O(5) + O(8) + O(8) * O(8)) + O(8) * ((O(8) * O(2) + O(6) * O(6) + O(8) * O(7)) * O(9) + O(3)));
    res.push(O(9) * O(4) * O(3) + (O(8) * (O(3) * O(4)) + O(9) * O(2) + (O(2) * O(9) * O(6))));
    res.push((O(7) + O(2) + O(8) * O(4) + O(8)) * O(6) * O(9) * (O(4) * O(4) * O(8) + (O(7) * O(6) + O(5) * O(4) * O(5) + O(5)) * O(6) + (O(4) + O(9) + O(9))) + O(4));
    res.push(O(3) + O(6) * O(7) + O(7) * O(3) * (O(8) + (O(9) * O(6) * O(3) * O(2) + O(9) + O(9)) + O(3) * O(4)));
    res.push(O(9) + (O(4) * (O(6) + O(9) * O(6) + O(8)) * O(9)) + O(6) + O(3) * O(6));
    res.push(O(7) * O(9) + (O(7) + O(7) * O(9) + O(9)) + O(3));
    res.push((O(3) + O(4)) * (O(2) * O(3) * O(5) * O(7)) + O(6) * O(3) + O(6));
    res.push(O(8) * (O(8) + (O(9) * O(9) * O(8) + O(4) * O(4) * O(2)) + O(4) + O(9)));
    res.push((O(7) * O(9) + O(3) * O(6) + O(6)) + O(2) * O(9) * O(5) * (O(6) * O(3) + O(2)) * O(8));
    res.push(O(2) * ((O(6) * O(4) * O(2) * O(2) * O(2)) * O(2) * O(3) * O(7) + O(3)) * ((O(7) * O(7) + O(8) + O(8)) + (O(9) * O(2) + O(8)) + O(5) + O(6)) + (O(7) + O(7) + O(5) * O(9)));
    res.push((O(5) + O(9) * (O(9) * O(5))) + ((O(2) + O(7) + O(2) * O(4) + O(5) + O(5)) + O(6) * O(8)) * O(8) + O(9));
    res.push(O(4) + ((O(5) * O(6) * O(7) + O(9) + O(4) * O(2)) + O(6) * O(5) + (O(5) + O(2) + O(7) + O(6) + O(9)) * O(5)));
    res.push(O(6) + O(6) * ((O(5) + O(4) * O(8) + O(7) + O(6) + O(6)) + O(9) * O(4)) * O(3) * O(2) + O(7));
    res.push(((O(4) + O(6) * O(5)) + O(9) + O(7) * O(5)) + O(9));
    res.push(((O(8) + O(8) + O(6) * O(4) * O(4) + O(7)) + (O(5) * O(6)) * (O(8) + O(6) + O(3) + O(4) + O(5))) + O(6));
    res.push(O(2) + O(2) + O(6) + O(8) * O(4) + (O(7) + O(5) + (O(8) * O(3) + O(6) + O(4) * O(7) + O(5)) * (O(5) + O(8) + O(8))));
    res.push(O(9) * ((O(5) + O(7) * O(6)) * O(6) * (O(4) * O(4) * O(8) * O(7)) * O(2)) * O(8) + O(2));
    res.push(O(3) + (O(8) * O(2) + O(9)) + (O(4) + O(4) * O(8) * O(6)) * (O(5) * O(5) + O(7) * O(6)) * O(8) + O(4));
    res.push((O(9) * O(2) + O(7)) + O(6) + (O(4) * O(4)));
    res.push(O(4) * ((O(8) + O(5) + O(8) + O(8)) + (O(9) + O(4) * O(7) + O(6)) + O(9)) * O(8));
    res.push(O(3) + (O(8) * O(3) * (O(3) + O(2) * O(2) * O(3) + O(3))) + (O(5) * O(6)) * O(4) * O(9));
    res.push(O(7) + (O(6) + (O(8) * O(6) + O(3)) * O(5)));
    res.push(O(2) + O(7) + O(4));
    res.push(O(6) + O(5) * ((O(3) + O(6) * O(5) * O(3)) + O(8) * O(3) + O(2)) * (O(8) * O(6) + O(3) + (O(6) * O(9) + O(6) + O(7) + O(6)) * O(3) * O(2)) + O(2) + O(4));
    println!("{:?}", res.into_iter().fold(O(0), |a, b| a * b));
    Ok(())
}
